const db = require('./db');

// –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–∞–Ω–¥—É –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
const command = process.argv[2];
const code = process.argv[3];

console.log('üé´ –ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤\n');

if (!command) {
  console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:');
  console.log('  node promo-manager.js list                    - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã');
  console.log('  node promo-manager.js active                  - –ø–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã');
  console.log('  node promo-manager.js inactive                - –ø–æ–∫–∞–∑–∞—Ç—å –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã');
  console.log('  node promo-manager.js deleted                 - –ø–æ–∫–∞–∑–∞—Ç—å —É–¥–∞–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã');
  console.log('  node promo-manager.js activate –ö–û–î            - –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥');
  console.log('  node promo-manager.js deactivate –ö–û–î          - –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥');
  console.log('  node promo-manager.js delete –ö–û–î              - —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ (–≤ –∫–æ—Ä–∑–∏–Ω—É)');
  console.log('  node promo-manager.js restore –ö–û–î             - –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã');
  console.log('  node promo-manager.js permanent-delete –ö–û–î    - –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–∏—Ç—å');
  console.log('  node promo-manager.js deactivate-all          - –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ');
  console.log('  node promo-manager.js delete-all              - —É–¥–∞–ª–∏—Ç—å –≤—Å–µ (–≤ –∫–æ—Ä–∑–∏–Ω—É)');
  process.exit(0);
}

function showPromoCodes(filter = 'all') {
  let whereClause = '';
  switch(filter) {
    case 'active':
      whereClause = 'WHERE is_active = 1 AND deleted_at IS NULL';
      break;
    case 'inactive':
      whereClause = 'WHERE is_active = 0 AND deleted_at IS NULL';
      break;
    case 'deleted':
      whereClause = 'WHERE deleted_at IS NOT NULL';
      break;
    default:
      whereClause = 'WHERE deleted_at IS NULL';
  }
  
  const sql = `
    SELECT 
      pc.*,
      COUNT(pu.id) as actual_uses
    FROM promo_codes pc
    LEFT JOIN promo_usage pu ON pc.id = pu.promo_code_id
    ${whereClause}
    GROUP BY pc.id
    ORDER BY pc.created_at DESC
  `;
  
  db.all(sql, [], (err, rows) => {
    if (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞:', err.message);
    } else {
      if (rows.length === 0) {
        console.log('üì≠ –ü—Ä–æ–º–æ–∫–æ–¥–æ–≤ –Ω–µ—Ç');
      } else {
        console.log(`üìã –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤: ${rows.length}\n`);
        rows.forEach(promo => {
          let status = '';
          if (promo.deleted_at) {
            status = 'üóëÔ∏è –£–¥–∞–ª–µ–Ω';
          } else if (promo.is_active) {
            status = '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω';
          } else {
            status = '‚ùå –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω';
          }
          
          const expires = promo.expires_at ? `\n‚è∞ –ò—Å—Ç–µ–∫–∞–µ—Ç: ${new Date(promo.expires_at).toLocaleDateString('ru-RU')}` : '';
          const description = promo.description ? `\nüìù ${promo.description}` : '';
          
          console.log(`üé´ ${promo.code}`);
          console.log(`   üí∞ –°–∫–∏–¥–∫–∞: ${promo.discount_percent}%`);
          console.log(`   üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: ${promo.used_count}/${promo.max_uses}`);
          console.log(`   üë§ –°–æ–∑–¥–∞–Ω: ${promo.created_by_username}`);
          console.log(`   üìÖ –î–∞—Ç–∞: ${new Date(promo.created_at).toLocaleDateString('ru-RU')}`);
          console.log(`   üîÑ –°—Ç–∞—Ç—É—Å: ${status}${expires}${description}`);
          console.log('');
        });
      }
    }
    db.close();
  });
}

function executeCommand(sql, successMessage, errorMessage) {
  db.run(sql, [code], function(err) {
    if (err) {
      console.error(`‚ùå ${errorMessage}:`, err.message);
    } else {
      if (this.changes > 0) {
        console.log(`‚úÖ ${successMessage}`);
      } else {
        console.log('‚ùå –ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
    }
    db.close();
  });
}

switch (command) {
  case 'list':
    showPromoCodes('all');
    break;
    
  case 'active':
    showPromoCodes('active');
    break;
    
  case 'inactive':
    showPromoCodes('inactive');
    break;
    
  case 'deleted':
    showPromoCodes('deleted');
    break;
    
  case 'activate':
    if (!code) {
      console.log('‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ–¥ –ø—Ä–æ–º–æ–∫–æ–¥–∞');
      process.exit(1);
    }
    executeCommand(
      'UPDATE promo_codes SET is_active = 1 WHERE code = ? AND deleted_at IS NULL',
      `–ü—Ä–æ–º–æ–∫–æ–¥ ${code} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω`,
      '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞'
    );
    break;
    
  case 'deactivate':
    if (!code) {
      console.log('‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ–¥ –ø—Ä–æ–º–æ–∫–æ–¥–∞');
      process.exit(1);
    }
    executeCommand(
      'UPDATE promo_codes SET is_active = 0 WHERE code = ? AND deleted_at IS NULL',
      `–ü—Ä–æ–º–æ–∫–æ–¥ ${code} –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω`,
      '–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞'
    );
    break;
    
  case 'delete':
    if (!code) {
      console.log('‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ–¥ –ø—Ä–æ–º–æ–∫–æ–¥–∞');
      process.exit(1);
    }
    executeCommand(
      'UPDATE promo_codes SET deleted_at = CURRENT_TIMESTAMP WHERE code = ? AND deleted_at IS NULL',
      `–ü—Ä–æ–º–æ–∫–æ–¥ ${code} –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É`,
      '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞'
    );
    break;
    
  case 'restore':
    if (!code) {
      console.log('‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ–¥ –ø—Ä–æ–º–æ–∫–æ–¥–∞');
      process.exit(1);
    }
    executeCommand(
      'UPDATE promo_codes SET deleted_at = NULL WHERE code = ?',
      `–ü—Ä–æ–º–æ–∫–æ–¥ ${code} –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã`,
      '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞'
    );
    break;
    
  case 'permanent-delete':
    if (!code) {
      console.log('‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ–¥ –ø—Ä–æ–º–æ–∫–æ–¥–∞');
      process.exit(1);
    }
    executeCommand(
      'DELETE FROM promo_codes WHERE code = ?',
      `–ü—Ä–æ–º–æ–∫–æ–¥ ${code} –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω`,
      '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞'
    );
    break;
    
  case 'deactivate-all':
    db.run('UPDATE promo_codes SET is_active = 0 WHERE is_active = 1 AND deleted_at IS NULL', (err) => {
      if (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤—Å–µ—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤:', err.message);
      } else {
        console.log('‚úÖ –í—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã!');
      }
      db.close();
    });
    break;
    
  case 'delete-all':
    db.run('UPDATE promo_codes SET deleted_at = CURRENT_TIMESTAMP WHERE deleted_at IS NULL', (err) => {
      if (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤—Å–µ—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤:', err.message);
      } else {
        console.log('‚úÖ –í—Å–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã –ø–µ—Ä–µ–º–µ—â–µ–Ω—ã –≤ –∫–æ—Ä–∑–∏–Ω—É!');
      }
      db.close();
    });
    break;
    
  default:
    console.log('‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.');
    db.close();
}
