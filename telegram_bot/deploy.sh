#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è Telegram –±–æ—Ç–∞ Unlock –Ω–∞ —Å–µ—Ä–≤–µ—Ä

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
log() {
    echo -e "${GREEN}[$(date '+%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
check_env() {
    if [ ! -f ".env" ]; then
        error "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        info "–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å —Ç–æ–∫–µ–Ω–æ–º –±–æ—Ç–∞:"
        info "BOT_TOKEN=your_bot_token_here"
        info "LOG_LEVEL=INFO"
        exit 1
    fi
    
    source .env
    
    if [ -z "$BOT_TOKEN" ]; then
        error "BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!"
        exit 1
    fi
    
    log "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker (–µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
install_docker() {
    if ! command -v docker &> /dev/null; then
        warning "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é..."
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–∫–µ—Ç—ã
        sudo apt-get update
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker
        curl -fsSL https://get.docker.com -o get-docker.sh
        sudo sh get-docker.sh
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
        sudo usermod -aG docker $USER
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose
        sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        
        log "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        warning "‚ö†Ô∏è  –ü–µ—Ä–µ–∑–∞–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≥—Ä—É–ø–ø—ã docker"
    else
        log "‚úÖ Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞
create_systemd_service() {
    info "–°–æ–∑–¥–∞—é systemd —Å–µ—Ä–≤–∏—Å –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞..."
    
    sudo tee /etc/systemd/system/unlock-bot.service > /dev/null <<EOF
[Unit]
Description=Unlock Telegram Bot
After=docker.service
Requires=docker.service

[Service]
Type=oneshot
RemainAfterExit=yes
WorkingDirectory=$(pwd)
ExecStart=/usr/local/bin/docker-compose up -d
ExecStop=/usr/local/bin/docker-compose down
TimeoutStartSec=0

[Install]
WantedBy=multi-user.target
EOF

    sudo systemctl daemon-reload
    sudo systemctl enable unlock-bot.service
    
    log "‚úÖ Systemd —Å–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω –∏ –≤–∫–ª—é—á–µ–Ω"
}

# –î–µ–ø–ª–æ–π –±–æ—Ç–∞
deploy_bot() {
    log "üöÄ –ù–∞—á–∏–Ω–∞—é –¥–µ–ø–ª–æ–π –±–æ—Ç–∞..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    docker-compose down 2>/dev/null || true
    
    # –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    docker-compose up -d --build
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    sleep 10
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    if docker-compose ps | grep -q "unlock-bot.*Up"; then
        log "‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"
        info "–°—Ç–∞—Ç—É—Å: $(docker-compose ps)"
    else
        error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞"
        info "–õ–æ–≥–∏: docker-compose logs"
        exit 1
    fi
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
show_status() {
    log "üìä –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:"
    docker-compose ps
    
    log "üìã –õ–æ–≥–∏ –±–æ—Ç–∞:"
    docker-compose logs --tail=20
}

# –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å
show_help() {
    echo "–°–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è Telegram –±–æ—Ç–∞ Unlock"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  deploy     - –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π –±–æ—Ç–∞"
    echo "  start      - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
    echo "  stop       - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
    echo "  restart    - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
    echo "  status     - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"
    echo "  logs       - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
    echo "  update     - –û–±–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
    echo "  install    - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker –∏ —Å–æ–∑–¥–∞—Ç—å —Å–µ—Ä–≤–∏—Å"
    echo "  help       - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "${1:-help}" in
    deploy)
        check_env
        install_docker
        create_systemd_service
        deploy_bot
        show_status
        ;;
    start)
        docker-compose up -d
        show_status
        ;;
    stop)
        docker-compose down
        log "–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        ;;
    restart)
        docker-compose restart
        show_status
        ;;
    status)
        show_status
        ;;
    logs)
        docker-compose logs -f
        ;;
    update)
        check_env
        deploy_bot
        show_status
        ;;
    install)
        install_docker
        create_systemd_service
        log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: $0 deploy"
        ;;
    help|--help|-h)
        show_help
        ;;
    *)
        error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
        show_help
        exit 1
        ;;
esac

