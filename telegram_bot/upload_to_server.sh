#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä Germany

set -e

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
SERVER_IP="209.38.208.251"
SERVER_USER="root"
SSH_KEY="$HOME/Desktop/ssh-germany-server"
SERVER_PATH="/opt/docker/unlock-bot"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[$(date '+%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –∫–ª—é—á–∞
check_ssh_key() {
    if [ ! -f "$SSH_KEY" ]; then
        error "SSH –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω: $SSH_KEY"
        exit 1
    fi
    log "‚úÖ SSH –∫–ª—é—á –Ω–∞–π–¥–µ–Ω"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
check_connection() {
    log "üîç –ü—Ä–æ–≤–µ—Ä—è—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É..."
    if ssh -i "$SSH_KEY" -o ConnectTimeout=10 -o BatchMode=yes "$SERVER_USER@$SERVER_IP" "echo 'Connection successful'" 2>/dev/null; then
        log "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É —É—Å–ø–µ—à–Ω–æ"
    else
        error "‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É"
        exit 1
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
create_server_directory() {
    log "üìÅ –°–æ–∑–¥–∞—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
    ssh -i "$SSH_KEY" "$SERVER_USER@$SERVER_IP" "mkdir -p $SERVER_PATH"
    log "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞: $SERVER_PATH"
}

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤
upload_files() {
    log "üì§ –ó–∞–≥—Ä—É–∂–∞—é —Ñ–∞–π–ª—ã –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    FILES=(
        "bot.py"
        "config.py"
        "start.py"
        "requirements.txt"
        "Dockerfile"
        "docker-compose.yml"
        "deploy.sh"
        "manage.sh"
        ".dockerignore"
        "README.md"
        "DEPLOYMENT.md"
        "SERVER_DEPLOY.md"
    )
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª
    for file in "${FILES[@]}"; do
        if [ -f "$file" ]; then
            log "üìÑ –ó–∞–≥—Ä—É–∂–∞—é: $file"
            scp -i "$SSH_KEY" "$file" "$SERVER_USER@$SERVER_IP:$SERVER_PATH/"
        else
            warning "‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $file"
        fi
    done
    
    log "‚úÖ –§–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã"
}

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
create_env_file() {
    log "‚öôÔ∏è  –°–æ–∑–¥–∞—é .env —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
    ssh -i "$SSH_KEY" "$SERVER_USER@$SERVER_IP" "cat > $SERVER_PATH/.env << 'EOF'
BOT_TOKEN=8036984380:AAHso_yhoDwMsANMCvaOGmyIi7teMKktsXY
LOG_LEVEL=INFO
EOF"
    log "‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
install_docker() {
    log "üê≥ –ü—Ä–æ–≤–µ—Ä—è—é Docker –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
    
    if ssh -i "$SSH_KEY" "$SERVER_USER@$SERVER_IP" "docker --version" 2>/dev/null; then
        log "‚úÖ Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        log "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Docker..."
        ssh -i "$SSH_KEY" "$SERVER_USER@$SERVER_IP" "
            curl -fsSL https://get.docker.com -o get-docker.sh
            sh get-docker.sh
            curl -L 'https://github.com/docker/compose/releases/latest/download/docker-compose-\$(uname -s)-\$(uname -m)' -o /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
        "
        log "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
start_bot() {
    log "üöÄ –ó–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
    ssh -i "$SSH_KEY" "$SERVER_USER@$SERVER_IP" "
        cd $SERVER_PATH
        chmod +x deploy.sh manage.sh
        ./deploy.sh deploy
    "
    log "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
check_status() {
    log "üìä –ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞..."
    ssh -i "$SSH_KEY" "$SERVER_USER@$SERVER_IP" "
        cd $SERVER_PATH
        ./deploy.sh status
    "
}

# –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å
show_help() {
    echo "–°–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∑–∫–∏ Telegram –±–æ—Ç–∞ Unlock –Ω–∞ —Å–µ—Ä–≤–µ—Ä"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  upload     - –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä"
    echo "  deploy     - –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π (–∑–∞–≥—Ä—É–∑–∫–∞ + –∑–∞–ø—É—Å–∫)"
    echo "  start      - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
    echo "  stop       - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
    echo "  restart    - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
    echo "  status     - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞"
    echo "  logs       - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –±–æ—Ç–∞"
    echo "  help       - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞:"
    echo "  IP: $SERVER_IP"
    echo "  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $SERVER_USER"
    echo "  –ü—É—Ç—å: $SERVER_PATH"
    echo ""
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "${1:-help}" in
    upload)
        check_ssh_key
        check_connection
        create_server_directory
        upload_files
        create_env_file
        log "‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
        ;;
    deploy)
        check_ssh_key
        check_connection
        create_server_directory
        upload_files
        create_env_file
        install_docker
        start_bot
        check_status
        log "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
        ;;
    start)
        check_ssh_key
        ssh -i "$SSH_KEY" "$SERVER_USER@$SERVER_IP" "cd $SERVER_PATH && ./deploy.sh start"
        ;;
    stop)
        check_ssh_key
        ssh -i "$SSH_KEY" "$SERVER_USER@$SERVER_IP" "cd $SERVER_PATH && ./deploy.sh stop"
        ;;
    restart)
        check_ssh_key
        ssh -i "$SSH_KEY" "$SERVER_USER@$SERVER_IP" "cd $SERVER_PATH && ./deploy.sh restart"
        ;;
    status)
        check_ssh_key
        check_status
        ;;
    logs)
        check_ssh_key
        ssh -i "$SSH_KEY" "$SERVER_USER@$SERVER_IP" "cd $SERVER_PATH && ./deploy.sh logs"
        ;;
    help|--help|-h)
        show_help
        ;;
    *)
        error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
        show_help
        exit 1
        ;;
esac
