const { spawn } = require('child_process');
const path = require('path');

console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –æ—Ç–∑—ã–≤–æ–≤...\n');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞
function startProcess(name, script, args = []) {
  console.log(`üì¶ –ó–∞–ø—É—Å–∫ ${name}...`);
  
  const process = spawn('node', [script, ...args], {
    cwd: __dirname,
    stdio: 'pipe'
  });

  process.stdout.on('data', (data) => {
    const output = data.toString().trim();
    if (output) {
      console.log(`[${name}] ${output}`);
    }
  });

  process.stderr.on('data', (data) => {
    const error = data.toString().trim();
    if (error && !error.includes('DeprecationWarning')) {
      console.error(`[${name} ERROR] ${error}`);
    }
  });

  process.on('close', (code) => {
    if (code !== 0) {
      console.error(`‚ùå ${name} –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º ${code}`);
    }
  });

  return process;
}

// –ó–∞–ø—É—Å–∫–∞–µ–º API —Å–µ—Ä–≤–µ—Ä
console.log('üåê –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞...');
const apiServer = startProcess('API', 'server.js');

// –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
setTimeout(() => {
  console.log('ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...');
  const telegramBot = startProcess('BOT', 'telegram-bot.js');
  
  console.log('\n‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞!');
  console.log('üì° API —Å–µ—Ä–≤–µ—Ä: http://localhost:3001');
  console.log('ü§ñ Telegram –±–æ—Ç: –∞–∫—Ç–∏–≤–µ–Ω');
  console.log('üåê –°–∞–π—Ç: http://localhost:5173');
  console.log('\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ endpoints:');
  console.log('   GET http://localhost:3001/api/reviews - –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–∑—ã–≤—ã');
  console.log('   GET http://localhost:3001/api/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞');
  console.log('\nüõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C\n');

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
  process.on('SIGINT', () => {
    console.log('\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã...');
    apiServer.kill();
    telegramBot.kill();
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
    process.exit(0);
  });

}, 2000);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ —É–ø–∞–ª–∏
setInterval(() => {
  if (apiServer.killed) {
    console.error('‚ùå API —Å–µ—Ä–≤–µ—Ä —É–ø–∞–ª, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º...');
    const newApiServer = startProcess('API', 'server.js');
    Object.assign(apiServer, newApiServer);
  }
}, 5000);

